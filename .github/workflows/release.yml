name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+.[0-9]+"

jobs:

  buildProjects:
    runs-on: ubuntu-latest
    env:
      GENRELEASE: ${{ github.ref_name }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
        submodules: true

    - name: Build the package
      run: |
        dotnet build ArmoniK.Extensions.Csharp.sln -c Release -p:Version=$GENRELEASE
    - name: Pack the package VERSION
      run: |
        dotnet pack ArmoniK.Extensions.Csharp.sln -c Release -o /tmp/packages -p:Version=$GENRELEASE
    - name: Push the package
      run: |
        find /tmp/packages -name 'ArmoniK*.nupkg' ! -name '*test*.nupkg' -exec dotnet nuget push {} -k ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols \;

  buildImages:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
        submodules: true 

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_LOGIN }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        file: Worker/src/DLLWorker/Dockerfile
        context: .
        platforms: |
          linux/arm64
          linux/amd64
        push: true
        tags: |
            dockerhubaneo/armonik_worker_dll:${{ github.ref_name }}
            dockerhubaneo/armonik_worker_dll:latest